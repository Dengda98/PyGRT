# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Zhu Dengda
# This file is distributed under the same license as the PyGRT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyGRT 0.6.1.dev1+g4641a40.d20250422\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-22 13:40+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/Advanced/integ_converg/integ_converg.rst:2
msgid "积分收敛性"
msgstr "Convergency of Integral"

#: ../../source/Advanced/integ_converg/integ_converg.rst
msgid "Author"
msgstr ""

#: ../../source/Advanced/integ_converg/integ_converg.rst:4
msgid "Zhu Dengda"
msgstr ""

#: ../../source/Advanced/integ_converg/integ_converg.rst
msgid "Email"
msgstr ""

#: ../../source/Advanced/integ_converg/integ_converg.rst:5
msgid "zhudengda@mail.iggcas.ac.cn"
msgstr ""

#: ../../source/Advanced/integ_converg/integ_converg.rst:9
msgid ""
"通过输出核函数文件，观察源点和场点深度接近时，积分收敛性的变化，以及峰谷平均法的作用。 **具体积分表达式以及分类详见** "
":doc:`/Tutorial/dynamic/gfunc`。"
msgstr ""
"By outputting the kernel function files, observe the changes in integral "
"convergence when the source and field point depths are close, as well as "
"the role of the peak-trough averaging method. **For specific integral "
"expressions and types, see** :doc:`/Tutorial/dynamic/gfunc`."

#: ../../source/Advanced/integ_converg/integ_converg.rst:12
msgid "核函数文件"
msgstr "Kernel function file"

#: ../../source/Advanced/integ_converg/integ_converg.rst:13
msgid "该文件记录了波数积分过程中不同波数对应的核函数值。以下用法展示了如何输出该文件。"
msgstr ""
"This file records the kernel function values corresponding to different "
"wavenumbers during the wavenumber integration process. The following "
"usage demonstrates how to output this file."

#: ../../source/Advanced/integ_converg/integ_converg.rst:17
#: ../../source/Advanced/integ_converg/integ_converg.rst:40
#: ../../source/Advanced/integ_converg/integ_converg.rst:104
#: ../../source/Advanced/integ_converg/integ_converg.rst:188
msgid "C"
msgstr ""

#: ../../source/Advanced/integ_converg/integ_converg.rst:24
msgid "输出的核函数文件会在  :rst:dir:`GRN_grtstats/milrow_{depsrc}_{deprcv}/` 路径下。"
msgstr ""
"The output kernel function files will be under the "
":rst:dir:`GRN_grtstats/milrow_{depsrc}_{deprcv}/` directory."

#: ../../source/Advanced/integ_converg/integ_converg.rst:26
#: ../../source/Advanced/integ_converg/integ_converg.rst:56
#: ../../source/Advanced/integ_converg/integ_converg.rst:111
#: ../../source/Advanced/integ_converg/integ_converg.rst:195
msgid "Python"
msgstr ""

#: ../../source/Advanced/integ_converg/integ_converg.rst:33
msgid "输出的核函数文件会在自定义路径下。"
msgstr "The output kernel function files will be in a custom path."

#: ../../source/Advanced/integ_converg/integ_converg.rst:36
msgid ""
"C和Python导出的核函数文件是一致的，底层调用的是相同的函数。文件名称格式为 ``K_{iw}_{freq}``，其中 ``{iw}`` "
"表示频率索引值， ``{freq}`` 表示对应频率(Hz)。文件为自定义的二进制文件， "
"**强烈建议使用Python进行读取及后续处理**。这里还是给出两种读取方法。"
msgstr ""
"The kernel function files exported by C and Python are identical, as they"
" call the same underlying functions. The file naming format is "
"``K_{iw}_{freq}``, where ``{iw}`` represents the frequency index and "
"``{freq}`` represents the corresponding frequency (Hz). The files are "
"custom binary files, and **it is strongly recommended to use Python for "
"reading and subsequent processing**. Here, two reading methods are still "
"provided."

#: ../../source/Advanced/integ_converg/integ_converg.rst:42
msgid ":doc:`/Module/ker2asc` 模块可将单个核函数文件转为文本格式。"
msgstr ""
"The :doc:`/Module/ker2asc` module can convert a single kernel function file "
"into text format."

#: ../../source/Advanced/integ_converg/integ_converg.rst:49
#: ../../source/Advanced/integ_converg/integ_converg.rst:153
msgid "输出的文件如下，"
msgstr "The output files are as follows,"

#: ../../source/Advanced/integ_converg/integ_converg.rst:54
msgid "后续你可以选择习惯的方式读取和处理。"
msgstr ""
"Subsequently, you can choose your preferred method for reading and "
"processing."

#: ../../source/Advanced/integ_converg/integ_converg.rst:63
msgid ""
"其中除了波数 ``k`` 外，每条结果的命名格式均为 ``{srcType}_{q/w/v}``，与 "
":doc:`/Tutorial/dynamic/gfunc` 部分介绍的积分公式中的核函数 :math:`q_m, w_m, v_m` 保持一致。"
msgstr ""
"Except for the wavenumber ``k``, the naming format of each result is "
"``{srcType}_{q/w/v}``, consistent with the kernel functions :math:`q_m, "
"w_m, v_m` introduced in the integral formulas in the "
":doc:`/Tutorial/dynamic/gfunc` section."

#: ../../source/Advanced/integ_converg/integ_converg.rst:67
msgid ""
"核函数文件中记录的值非最终核函数值。对于动态解，还需乘 :math:`\\left(-\\dfrac{\\Delta "
"k}{4\\pi\\rho\\omega^2}\\right)`。"
msgstr ""
"The values recorded in the kernel function file are not the final kernel "
"function values. For dynamic solutions, they need to be multiplied by "
":math:`\\left(-\\dfrac{\\Delta k}{4\\pi\\rho\\omega^2}\\right)`."

#: ../../source/Advanced/integ_converg/integ_converg.rst:70
msgid "可视化"
msgstr "Visualization"

#: ../../source/Advanced/integ_converg/integ_converg.rst:71
msgid ""
"以下将使用Python进行图件绘制。 "
"**在Python函数中指定震源类型、阶数、积分类型，可自动绘制核函数、被积函数和积分值随波数的变化**，其中积分类型对应 "
":doc:`/Tutorial/dynamic/gfunc` 部分介绍的4种类型。"
msgstr ""
"The following will use Python for plotting. **By specifying the source "
"type, order, and integral type in the Python function, it can "
"automatically plot the kernel function, integrand, and the variation of "
"integral values with wavenumber**, where the integral types correspond to"
" the four types introduced in the :doc:`/Tutorial/dynamic/gfunc` section."

#: ../../source/Advanced/integ_converg/integ_converg.rst:82
msgid "可以通过指定 ``RorI=False`` 参数来指定绘制虚部，传入 ``RorI=2`` 表示实虚部都绘制。"
msgstr ""
"You can specify the ``RorI=False`` parameter to plot the imaginary part, "
"or pass ``RorI=2`` to plot both the real and imaginary parts."

#: ../../source/Advanced/integ_converg/integ_converg.rst:93
msgid "从图中可以看到，当波数增加到一定范围以上，积分收敛良好，无振荡现象。"
msgstr ""
"From the figure, it can be seen that when the wavenumber increases beyond"
" a certain range, the integral converges well without oscillation."

#: ../../source/Advanced/integ_converg/integ_converg.rst:98
msgid "当震源和场点深度接近/相等时，积分收敛速度变慢"
msgstr ""
"Integral converge slowly when source and receiver depths are close or "
"equal."

#: ../../source/Advanced/integ_converg/integ_converg.rst:100
msgid "假设其它参数不变，我们调整 **震源深度为0.1km**，再计算格林函数，读取核函数文件，绘制图像。"
msgstr ""
"Assuming other parameters remain unchanged, we adjust the **source depth "
"to 0.1km**, then calculate the Green's function, read the kernel function"
" file, and plot the image."

#: ../../source/Advanced/integ_converg/integ_converg.rst:122
msgid "从图中可以清晰地看到，相比震源深度2km时，积分收敛速度明显变慢，积分值振荡，这要求增加波数积分上限，但这必然降低计算效率。"
msgstr ""
"From the figure, it can be clearly seen that compared to a source depth "
"of 2km, the integral convergence speed is significantly slower, and the "
"integral values oscillate. This requires increasing the upper limit of "
"wavenumber integration, but it inevitably reduces computational "
"efficiency."

#: ../../source/Advanced/integ_converg/integ_converg.rst:124
msgid ""
"你可以尝试 "
"**当震源和场点位于同一深度**，收敛振荡现象也很明显。要注意的是这和是否在地表无关，即使震源和场点都在地下，深度接近时积分收敛也会变慢。"
msgstr ""
"You can try **when the source and field points are at the same depth**, "
"the convergence oscillation phenomenon is also obvious. Note that this is"
" unrelated to whether they are on the surface; even if the source and "
"field points are underground, the integral convergence slows down when "
"their depths are close."

#: ../../source/Advanced/integ_converg/integ_converg.rst:128
msgid "峰谷平均法"
msgstr "Peak-Trough averaging method"

#: ../../source/Advanced/integ_converg/integ_converg.rst:129
msgid ""
"具体原理很简洁易懂，从以下图像中你也能了解大概。详见 :ref:`(Zhang et al., 2003) <zhang_2003>` "
":ref:`(张海明, 2021) <zhang_book_2021>`。"
msgstr ""
"The principle is very simple and easy to understand, and you can get a "
"general idea from the following image. See :ref:`(Zhang et al., 2003) "
"<zhang_2003>` :ref:`(Zhang Haiming, 2021) <zhang_book_2021>` for details."

#: ../../source/Advanced/integ_converg/integ_converg.rst:131
msgid ""
"在以上示例中，当震源和场点深度接近时，你会注意到输出的核函数文件增加了，这是因为程序内部设定 "
"**当震源和场点深度差小于1km时，自动使用峰谷平均法（PTAM）**。具体流程为，程序中在进行完离散波数积分后，继续增加k（不同震中距使用不同dk），使用PTAM寻找足够数量的波峰和波谷（内部设定为36个），再对这些波峰波谷取缩减序列"
" :math:`M_i \\leftarrow 0.5\\times(M_i + M_{i+1})` "
"，得到估计的积分收敛值。取缩减序列的C代码如下，"
msgstr ""
"In the above example, when the source and field point depths are close, "
"you will notice an increase in the output kernel function files. This is "
"because the program is internally configured to **automatically use the "
"Peak-Trough Averaging Method (PTAM) when the depth difference between the"
" source and field point is less than 1km**. The specific process is as "
"follows: after completing the discrete wavenumber integration, the "
"program continues to increase k (using different dk for different "
"epicentral distances), uses PTAM to find a sufficient number of peaks and"
" troughs (internally set to 36), and then applies a reduction sequence to"
" these peaks and troughs  :math:`M_i \\leftarrow 0.5\\times(M_i + "
"M_{i+1})` to obtain the estimated integral convergence value. The C code "
"for the reduction sequence is as follows,"

#: ../../source/Advanced/integ_converg/integ_converg.rst:142
msgid ""
"在 ``K_{iw}_{freq}`` 文件同级目录下，程序把 **PTAM过程中的核函数以及积分峰谷位置分为两个文件** 保存在 "
"``PTAM_{ir}_{dist}/`` 目录下（ ``{ir}`` 为震中距索引， ``{dist}`` 为震中距），其中  "
"``PTAM_{ir}_{dist}/K_{iw}_{freq}`` 为核函数文件（格式不变）， "
"``PTAM_{ir}_{dist}/PTAM_{iw}_{freq}`` 为峰谷文件，其中记录积分值的峰谷。"
msgstr ""
"In the same directory as the ``K_{iw}_{freq}`` file, the program saves "
"**the kernel functions and integral peak-trough positions during the PTAM"
" process into two separate files** in the ``PTAM_{ir}_{dist}/`` directory"
" (where ``{ir}`` is the epicentral distance index and ``{dist}`` is the "
"epicentral distance). Among them, ``PTAM_{ir}_{dist}/K_{iw}_{freq}`` is "
"the kernel function file (format unchanged), and "
"``PTAM_{ir}_{dist}/PTAM_{iw}_{freq}`` is the peak-trough file, which "
"records the peaks and troughs of the integral values."

#: ../../source/Advanced/integ_converg/integ_converg.rst:146
msgid ""
":doc:`/Module/ker2asc` 模块也支持将 ``PTAM_{ir}_{dist}/PTAM_{iw}_{freq}`` "
"文件转为文本格式，"
msgstr ""
"The :doc:`/Module/ker2asc` module also supports converting the "
"``PTAM_{ir}_{dist}/PTAM_{iw}_{freq}`` file into text format."

#: ../../source/Advanced/integ_converg/integ_converg.rst:158
msgid "记录了不同震源、不同积分类型的峰谷位置。"
msgstr ""
"Records the peak-trough positions for different sources and integral "
"types."

#: ../../source/Advanced/integ_converg/integ_converg.rst:161
msgid ""
"故为了绘制完整的波数积分+PTAM过程，涉及三个文件。不过Python函数已经做了优化，由于程序输出的目录结构固定，文件命名格式固定，只需传入 "
"``PTAM_{ir}_{dist}/PTAM_{iw}_{freq}`` 文件，Python函数会自动读取对应的三个文件。"
msgstr ""
"Therefore, to plot the complete wavenumber integration + PTAM process, "
"three files are involved. However, the Python function has been "
"optimized. Since the program's output directory structure and file naming"
" format are fixed, you only need to pass the "
"``PTAM_{ir}_{dist}/PTAM_{iw}_{freq}`` file, and the Python function will "
"automatically read the corresponding three files."

#: ../../source/Advanced/integ_converg/integ_converg.rst:172
msgid "红十字为选取的波峰波谷，再取缩减序列即可得到估计的积分收敛值。"
msgstr ""
"The red crosses represent the selected peaks and troughs, and the "
"estimated integral convergence value can be obtained by applying the "
"reduction sequence."

#: ../../source/Advanced/integ_converg/integ_converg.rst:177
msgid "静态解的积分收敛性"
msgstr "Integral convergence of static solutions"

#: ../../source/Advanced/integ_converg/integ_converg.rst:178
msgid "以上部分是以动态解为例，静态解从积分类型、收敛特征、文件格式、绘图完全类似，只是不再有频率索引值。"
msgstr ""
"The above section uses dynamic solutions as an example. Static solutions "
"are completely similar in terms of integral types, convergence "
"characteristics, file formats, and plotting, except that there is no "
"frequency index."

#: ../../source/Advanced/integ_converg/integ_converg.rst:182
msgid ""
"核函数文件中记录的值非最终核函数值。对于静态解，还需乘 :math:`\\left(\\dfrac{\\Delta "
"k}{4\\pi\\mu}\\right)`。"
msgstr ""
"The values recorded in the kernel function file are not the final kernel "
"function values. For static solutions, they need to be multiplied by "
":math:`\\left(\\dfrac{\\Delta k}{4\\pi\\mu}\\right)`."

#: ../../source/Advanced/integ_converg/integ_converg.rst:184
msgid "假设震源深度0.1km，场点位于地表，场点仅定义一个点(2,2)做示例，这里直接给出脚本。"
msgstr ""
"Assume the source depth is 0.1km, the field point is on the surface, and "
"only one point (2,2) is defined as an example. The script is provided "
"directly here."

#: ../../source/Advanced/integ_converg/integ_converg.rst:205
msgid "**只使用离散波数积分**"
msgstr "**Only use discrete wavenumber integration**"

#: ../../source/Advanced/integ_converg/integ_converg.rst:213
msgid "**使用峰谷平均法**"
msgstr "**Use Peak-Trough averaging method**"

