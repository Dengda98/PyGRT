# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Zhu Dengda
# This file is distributed under the same license as the PyGRT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyGRT 0.6.1.dev1+g4641a40.d20250422\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-22 15:39+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/Tutorial/integ_converg/integ_converg.rst:4
#: fd9f01d970324524b689e6a87b760452
msgid "积分收敛性"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst
#: 8273dbbfde3c4791a04cd95e5a26f17a
msgid "Author"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:6
#: 3b14ac66b4fc44528c2ac2106998a2be
msgid "Zhu Dengda"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst
#: ec1888a6600f49c0b1bb0aa44348b0ca
msgid "Email"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:7
#: 3ebb2dec87e040468ce1e08d9db009f9
msgid "zhudengda@mail.iggcas.ac.cn"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:11
#: ed5cc5a836c7449caf0803481826c90b
msgid ""
"通过输出核函数文件，观察源点和场点深度接近时，积分收敛性的变化，以及峰谷平均法的作用。 **具体积分表达式以及分类详见** "
":ref:`gfunc_rst`。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:14
#: a3db70a667d0406caab36a01473d5072
msgid "核函数文件"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:15
#: 6e42f101df754a879606c4fcb84d0828
msgid "该文件记录了波数积分过程中不同波数对应的核函数值。以下用法展示了如何输出该文件。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:19
#: ../../source/Tutorial/integ_converg/integ_converg.rst:42
#: ../../source/Tutorial/integ_converg/integ_converg.rst:106
#: ../../source/Tutorial/integ_converg/integ_converg.rst:190
#: 143b7951a4424777b71584d3d78977c2 50fddd87d79f4badb62bff21838ad495
#: daa52806030f4f65b5e8bbd99b951df0 db6f427800064de6a39ef52ab7e7cb39
msgid "C"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:26
#: 95418d4aa13444e58f8b73de3ae72858
msgid "输出的核函数文件路径会在  :rst:dir:`GRN_grtstats/milrow_{depsrc}_{deprcv}/` 路径下。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:28
#: ../../source/Tutorial/integ_converg/integ_converg.rst:58
#: ../../source/Tutorial/integ_converg/integ_converg.rst:113
#: ../../source/Tutorial/integ_converg/integ_converg.rst:197
#: 429f41c5a7234a5eb2c7c79060edb822 5901ff153f994157ab4e2c09f0b8a77f
#: 8beb563b8cb24ca0919939ff4bb28ebf fc8f0541944a449d9838bccba9197959
msgid "Python"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:35
#: 0d690cefbd2c4dca99a7148395a0d6b2
msgid "输出的核函数文件路径会在自定义路径下。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:38
#: 70b4bad47b8d49208815b5ad8915b86e
msgid ""
"C和Python导出的核函数文件是一致的，底层调用的是相同的函数。文件名称格式为 ``K_{iw}_{freq}``，其中 ``{iw}`` "
"表示频率索引值， ``{freq}`` 表示对应频率(Hz)。文件为自定义的二进制文件， "
"**强烈建议使用Python进行读取及后续处理**。这里还是给出两种读取方法。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:44
#: 73da8884767b43f4b096c5699c6ad6e1
msgid ":command:`grt.k2a` 程序可将单个核函数文件转为文本格式。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:51
#: ../../source/Tutorial/integ_converg/integ_converg.rst:155
#: 2d4c8e73dc8848ebabce5f216dce8fe9 302a0758167541f7a83926368623f1e7
msgid "输出的文件如下，"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:56
#: 56c959f30eee4dd3b695460f22278398
msgid "后续你可以选择习惯的方式读取和处理。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:65
#: 774a3323a6994ab78bfd3cf8188fbe4a
msgid ""
"其中除了波数 ``k`` 外，每条结果的命名格式均为 ``{srcType}_{q/w/v}{m}``，与 :ref:`gfunc_rst` "
"部分介绍的积分公式中的核函数 :math:`q_m, w_m, v_m` 保持一致。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:69
#: 134f85e366ef42448e0cedc161180e2b
msgid ""
"核函数文件中记录的值非最终核函数值。对于动态解，还需乘 :math:`\\left(-\\dfrac{\\Delta "
"k}{4\\pi\\rho\\omega^2}\\right)`。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:72
#: 78a6f44e73804f62bacbce9070b03d61
msgid "可视化"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:73
#: 879f345141fa4e418690962b1d156920
msgid ""
"以下将使用Python进行图件绘制。 "
"**在Python函数中指定震源类型、阶数、积分类型，可自动绘制核函数、被积函数和积分值随波数的变化**，其中积分类型对应 "
":ref:`gfunc_rst` 部分介绍的4种类型。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:84
#: 430d7921aec646d298c3bb4cd564ccee
msgid "可以通过指定 ``RorI=False`` 参数来指定绘制虚部，传入 ``RorI=2`` 表示实虚部都绘制。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:95
#: cec891a8167c441d93e1f0f01a63f656
msgid "从图中可以看到，当波数增加到一定范围以上，积分收敛良好，无振荡现象。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:100
#: 42d772f37db4433a9a100efd503e0e0f
msgid "当震源和场点深度接近/相等时，积分收敛速度变慢"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:102
#: b01e57de2fb343a983ffb56c1ad02833
msgid "假设其它参数不变，我们调整 **震源深度为0.1km**，再计算格林函数，读取核函数文件，绘制图像。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:124
#: 0f69ac05eeff4af58dfbcf43e4c6e8f5
msgid "从图中可以清晰地看到，相比震源深度2km时，积分收敛速度明显变慢，积分值振荡，这要求增加波数积分上限，但这必然降低计算效率。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:126
#: 0797b69836bf4180ba5689780d1d18be
msgid ""
"你可以尝试 "
"**当震源和场点位于同一深度**，收敛振荡现象也很明显。要注意的是这和是否在地表无关，即使震源和场点都在地下，深度接近时积分收敛也会变慢。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:130
#: 656d8935d8f54f2bb65e064a3fe821b9
msgid "峰谷平均法"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:131
#: 5677d0310b4348e893106d88dfc1e5f9
msgid ""
"具体原理很简洁易懂，从以下图像中你也能了解大概。详见 :ref:`(Zhang et al., 2003) <zhang_2003>` "
":ref:`(张海明, 2021) <zhang_book_2021>`。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:133
#: 05fae7d21a684afebd4b575465f0291f
msgid ""
"在以上示例中，当震源和场点深度接近时，你会注意到输出的核函数文件增加了，这是因为程序内部设定 "
"**当震源和场点深度差小于1km时，自动使用峰谷平均法（PTAM）**。具体流程为，程序中在进行完离散波数积分后，继续增加k（不同震中距使用不同dk），使用PTAM寻找足够数量的波峰和波谷（内部设定为36个），再对这些波峰波谷取缩减序列"
" :math:`M_i \\leftarrow 0.5\\times(M_i + M_{i+1})` "
"，得到估计的积分收敛值。取缩减序列的C代码如下，"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:144
#: a9104a95bcd44ae48fa4421260e69dc3
msgid ""
"在 ``K_{iw}_{freq}`` 文件同级目录下，程序把 **PTAM过程中的核函数以及积分峰谷位置分为两个文件** 保存在 "
"``PTAM_{ir}_{dist}/`` 目录下（ ``{ir}`` 为震中距索引， ``{dist}`` 为震中距），其中  "
"``PTAM_{ir}_{dist}/K_{iw}_{freq}`` 为核函数文件（格式不变）， "
"``PTAM_{ir}_{dist}/PTAM_{iw}_{freq}`` 为峰谷文件，其中记录积分值的峰谷。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:148
#: 5492d0e7cc6742c19d122eca4ffeb0eb
msgid ":command:`grt.k2a` 程序也支持将 ``PTAM_{ir}_{dist}/PTAM_{iw}_{freq}`` 文件转为文本格式，"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:160
#: 39f146fa19884f95a644c505469f975a
msgid "记录了不同震源、不同积分类型的峰谷位置。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:163
#: ef88f125266842a699b6da48bdd72bbb
msgid ""
"故为了绘制完整的波数积分+PTAM过程，涉及三个文件。不过Python函数已经做了优化，由于程序输出的目录结构固定，文件命名格式固定，只需传入 "
"``PTAM_{ir}_{dist}/PTAM_{iw}_{freq}`` 文件，Python函数会自动读取对应的三个文件。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:174
#: 62b141b242c84d908b59551b27845c5c
msgid "红十字为选取的波峰波谷，再取缩减序列即可得到估计的积分收敛值。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:179
#: cbf9055018924262a938cfb9df1ccd9f
msgid "静态解的积分收敛性"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:180
#: 6b0ebcaf238146679e660dddfac38780
msgid "以上部分是以动态解为例，静态解从积分类型、收敛特征、文件格式、绘图完全类似，只是不再有频率索引值。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:184
#: e4be907168844ed68dd5f653f9b49abc
msgid ""
"核函数文件中记录的值非最终核函数值。对于静态解，还需乘 :math:`\\left(\\dfrac{\\Delta "
"k}{4\\pi\\mu}\\right)`。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:186
#: 7ec3917ab3e640ff96070518c10a4660
msgid "假设震源深度0.1km，场点位于地表，场点仅定义一个点(2,2)做示例，这里直接给出脚本。"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:207
#: 2abd9848504845acb4869b98d24174ee
msgid "**只使用离散波数积分**"
msgstr ""

#: ../../source/Tutorial/integ_converg/integ_converg.rst:215
#: 263486be70b74606bcbb010d7d96a4fc
msgid "**使用峰谷平均法**"
msgstr ""

